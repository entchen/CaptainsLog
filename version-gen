#!/usr/bin/perl

$VERSION_MAJOR = 0;
$VERSION_MINOR = 5;
$VERSION_PATCH = 0;

$VERSION_BUILD = $ENV{'BUILD_NUMBER'};

if (!(defined($VERSION_BUILD) && $VERSION_BUILD ne "")) {
    $VERSION_BUILD = 0;
}

my $ASSEMBLY_TEMPLATE = "source/SCANsat-Notebook/Properties/AssemblyInfo.in";
my $ASSEMBLY_FILE     = "source/SCANsat-Notebook/Properties/AssemblyInfo.cs";

my $VERSION_SCRIPT_FILE = "versions.sh";

# Write our AssemblyInfo

open(my $template_fh, '<', $ASSEMBLY_TEMPLATE);
open(my $assembly_fh, '>', $ASSEMBLY_FILE);

while (<$template_fh>) {
    s{\@VERSION_MAJOR\@}{$VERSION_MAJOR};
    s{\@VERSION_MINOR\@}{$VERSION_MINOR};
    s{\@VERSION_PATCH\@}{$VERSION_PATCH};
    s{\@VERSION_BUILD\@}{$VERSION_BUILD};
    print {$assembly_fh} $_;
}

close($template_fh);
close($assembly_fh);

# Write version script for jenkins
open(my $version_script_fh, '>', $VERSION_SCRIPT_FILE);
print ${version_script_fh} "export VERSION=${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}\n";
print ${version_script_fh} "\n";
print ${version_script_fh} "export VERSION_MAJOR=${VERSION_MAJOR}\n";
print ${version_script_fh} "export VERSION_MINOR=${VERSION_MINOR}\n";
print ${version_script_fh} "export VERSION_PATCH=${VERSION_PATCH}\n";
close ($version_script_fh);
